import "reflect-metadata";
import { DebugLoggerFactory } from "../utils/DebugLoggerFactory";
import { MockTreeResolver } from "../../test/fixtures/MockTreeResolver";
import { MockTreeFlattener } from "../../test/fixtures/MockTreeFlattener";
import { MockVulnerabilityStore } from "../../test/fixtures/MockVulnerabilityStore";

import { SimpleVulnerabilityChecker } from "./SimpleVulnerabilityChecker";

function createMocks() {
  const treeResolver = new MockTreeResolver();
  const treeFlattener = new MockTreeFlattener();
  const vulnerabilityStore = new MockVulnerabilityStore();

  const vulnerabilityChecker = new SimpleVulnerabilityChecker(
    new DebugLoggerFactory(),
    treeResolver,
    treeFlattener,
    vulnerabilityStore
  );

  return {
    treeResolver,
    treeFlattener,
    vulnerabilityStore,
    vulnerabilityChecker,
  };
}

describe("SimpleVulnerabilityChecker", () => {
  it("finds vulnerabilities", async () => {
    // arrange
    const { vulnerabilityChecker } = createMocks();

    // act
    const vulnerabilities = await vulnerabilityChecker.checkVulnerabilities(
      "react",
      "15.0.2"
    );

    // assert
    expect(vulnerabilities).toContain([
      {
        breadcrumb: {
          name: "loose-envify",
          version: "^1.0.0",
          resolvedVersion: "1.4.0",
          parents: ["react", "fbjs"],
        },
        vulnerability: {
          name: "loose-envify",
          fromVersion: "1.4.0",
          fixedInVersion: "1.5.0",
          description: "An XSS vulnerability",
        },
      },
      {
        breadcrumb: {
          name: "loose-envify",
          version: "^1.0.0",
          resolvedVersion: "1.4.0",
          parents: ["react"],
        },
        vulnerability: {
          name: "loose-envify",
          fromVersion: "1.4.0",
          fixedInVersion: "1.5.0",
          description: "An XSS vulnerability",
        },
      },
    ]);
  });
});
